{
  "app": "npx ts-node --prefer-ts-exts bin/analytics.ts",
  "watch": {
    "include": [
      "**"
    ],
    "exclude": [
      "README.md",
      "cdk*.json",
      "**/*.d.ts",
      "**/*.js",
      "tsconfig.json",
      "package*.json",
      "yarn.lock",
      "node_modules",
      "test"
    ]
  },
  "context": {
    "cdk-nag-supressions": [
      {
        "id": "AwsSolutions-IAM5",
        "reason": "The IAM entity contains wildcard permissions and does not have a cdk-nag rule suppression with evidence for those permission."
      },
      {
        "id": "AwsSolutions-SNS2",
        "reason": "The SNS Topic does not have server-side encryption enabled"
      },
      {
        "id": "AwsSolutions-SNS3",
        "reason": "The SNS Topic does not require publishers to use SSL"
      },
      {
        "id": "AwsSolutions-IAM4",
        "reason": "The IAM user, role, or group uses AWS managed policies"
      },
      {
        "id": "AwsSolutions-L1",
        "reason": "The non-container Lambda function is not configured to use the latest runtime version"
      }
    ],
    "environment": 
    {
      "dev": {
        "streamMode": "PROVISIONED",
        "retentionPeriod": 24,
        "shardCount": 1,
        "streamName": "KinesisInputStream",
        "tags": {
          "stage": "dev",
          "owner": "jose"
        }
      },
      "stagging":
      {
        "streamMode": "PROVISIONED",
        "retentionPeriod": 168,
        "shardCount": 4,
        "streamName": "KinesisInputStream",
        "tags": {
          "stage": "stagging"
        }
      },
      "prod":
      {
        "streamMode": "PROVISIONED",
        "retentionPeriod": 168,
        "shardCount": 4,
        "streamName": "KinesisInputStream",
        "tags": {
          "stage": "prod"
        }
      }
    },
    
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:target-partitions": [
      "aws",
      "aws-cn"
    ],
    "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": true,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": true,
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false
  }
}
